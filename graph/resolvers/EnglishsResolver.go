package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.63

import (
	"context"
	"fmt"

	"github.com/Nguyen-Tan-Dat/Vocabularies-Learning-API/graph/model"
)

// CreateEnglish is the resolver for the createEnglish field.
func (r *mutationResolver) CreateEnglish(ctx context.Context, input model.NewEnglishInput) (*model.English, error) {
	panic(fmt.Errorf("not implemented: CreateEnglish - createEnglish"))
}

// UpdateEnglish is the resolver for the updateEnglish field.
func (r *mutationResolver) UpdateEnglish(ctx context.Context, input model.UpdateEnglishInput) (*model.English, error) {
	panic(fmt.Errorf("not implemented: UpdateEnglish - updateEnglish"))
}

// DeleteEnglish is the resolver for the deleteEnglish field.
func (r *mutationResolver) DeleteEnglish(ctx context.Context, id int32) (bool, error) {
	panic(fmt.Errorf("not implemented: DeleteEnglish - deleteEnglish"))
}

// GetEnglish is the resolver for the getEnglish field.
func (r *queryResolver) GetEnglish(ctx context.Context, id int32) (*model.English, error) {
	panic(fmt.Errorf("not implemented: GetEnglish - getEnglish"))
}

// ListEnglish is the resolver for the listEnglish field.
func (r *queryResolver) ListEnglish(ctx context.Context, userID int32) ([]*model.English, error) {
	panic(fmt.Errorf("not implemented: ListEnglish - listEnglish"))
}
